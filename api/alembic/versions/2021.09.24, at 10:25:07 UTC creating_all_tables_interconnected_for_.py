"""Creating all tables interconnected for business

Revision ID: 4276b8e6525f
Revises: 9fb23c089e3e
Create Date: 2021-09-24 10:25:07.151986

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4276b8e6525f'
down_revision = '9fb23c089e3e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('business_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.String(length=3000), nullable=False),
    sa.Column('hide', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_business_type'))
    )
    op.create_table('business',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('type_business_id', sa.Integer(), nullable=True),
    sa.Column('status_business', sa.Enum('ACTIVE', 'NOT_ACTIVE', name='businessstatus', native_enum=False), nullable=False),
    sa.Column('registration_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('description', sa.VARCHAR(length=4000), nullable=False),
    sa.Column('address', sa.VARCHAR(length=255), nullable=False),
    sa.Column('services', sa.VARCHAR(length=4000), nullable=False),
    sa.Column('region', sa.VARCHAR(length=255), nullable=False),
    sa.Column('city', sa.VARCHAR(length=255), nullable=False),
    sa.Column('latitude', sa.Float(precision=20), nullable=False),
    sa.Column('longitude', sa.Float(precision=20), nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), nullable=False),
    sa.Column('phone', sa.VARCHAR(length=255), nullable=False),
    sa.Column('website', sa.VARCHAR(length=255), nullable=False),
    sa.Column('operation_hours', sa.VARCHAR(length=255), nullable=False),
    sa.Column('logo_picture', sa.VARCHAR(length=255), nullable=False),
    sa.ForeignKeyConstraint(['type_business_id'], ['business_type.id'], name=op.f('fk_business_type_business_id_business_type'), ondelete='SET DEFAULT'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_business_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_business'))
    )
    op.create_table('client',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('user_type', sa.Enum('INDIVIDUAL', 'LLC', 'SOLE_PROPRIETOR', name='usertypeforbusiness', native_enum=False), nullable=False),
    sa.Column('status', sa.Enum('NEW', 'IN_PROGRESS', 'IN_ARCHIVE', name='statususerforbusiness', native_enum=False), nullable=False),
    sa.Column('region', sa.VARCHAR(length=255), nullable=False),
    sa.Column('city', sa.VARCHAR(length=255), nullable=False),
    sa.Column('address', sa.VARCHAR(length=255), nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), nullable=False),
    sa.Column('phone', sa.VARCHAR(length=255), nullable=False),
    sa.Column('latitude', sa.Float(precision=20), nullable=False),
    sa.Column('longitude', sa.Float(precision=20), nullable=False),
    sa.Column('client_user_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.VARCHAR(length=4000), nullable=False),
    sa.Column('birthday', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['client_user_id'], ['user.id'], name=op.f('fk_client_client_user_id_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_client_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_client'))
    )
    op.create_table('business_roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.VARCHAR(length=4000), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['business.id'], name=op.f('fk_business_roles_business_id_business'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_business_roles'))
    )
    op.create_table('role_permissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('full_access', sa.Enum('ALL_ACCESS', 'READ_ONLY', name='roleprivileges', native_enum=False), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['business_roles.id'], name=op.f('fk_role_permissions_role_id_business_roles'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role_permissions'))
    )
    op.create_table('team_member',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('business_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('date_from', sa.TIMESTAMP(), nullable=False),
    sa.Column('date_to', sa.TIMESTAMP(), nullable=False),
    sa.Column('description', sa.VARCHAR(length=4000), nullable=False),
    sa.Column('member_type', sa.Enum('OWNER', 'STAFF', name='membertype', native_enum=False), nullable=False),
    sa.Column('member_status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['business.id'], name=op.f('fk_team_member_business_id_business'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['role_permissions.id'], name=op.f('fk_team_member_role_id_role_permissions'), ondelete='SET DEFAULT'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_team_member_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_team_member'))
    )
    op.create_unique_constraint(op.f('uq_user_phone'), 'user', ['phone'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_user_phone'), 'user', type_='unique')
    op.drop_table('team_member')
    op.drop_table('role_permissions')
    op.drop_table('business_roles')
    op.drop_table('client')
    op.drop_table('business')
    op.drop_table('business_type')
    # ### end Alembic commands ###
